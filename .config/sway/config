# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# direction keys, like on the neo keyboard layout
set $left i
set $down a
set $up l
set $right e
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu wofi --show drun -i --allow-images -W 500 -H 400
# for_window [class="URxvt" instance="launcher"] floating enable, border pixel 2, sticky enable
# set $dmenu exec urxvt -geometry 55x18 -name launcher -e env TERMINAL_COMMAND="urxvt -e" sway-launcher-desktop
# set $dmenu j4-dmenu-desktop --dmenu="bemenu -ib" --no-generic --term=kitty

### Output configuration
# atm kanshi is used for output configuration
# output DP-1 mode 2560x1440@59.951000Hz pos 0,0
# output eDP-1 res 1920x1080 pos 2560,0
# output HDMI-A-2 mode 1920x1080@50Hz pos 1920,0
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /home/paul/Pictures/Wallpapers/cristina-gottardi-milan-original.jpg fill
output * bg /home/paul/Pictures/Wallpapers/cristina-gottardi-venice.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
exec swayidle -w \
         timeout 300 'swaylock --screenshots --clock --indicator --indicator-radius 100 --indicator-thickness 7 --effect-blur 7x5 --effect-vignette 0.5:0.5 --ring-color bb00cc --key-hl-color 880033 --grace 2 --fade-in 0.2' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock --screenshots --clock --indicator --indicator-radius 100 --indicator-thickness 7 --effect-blur 7x5 --effect-vignette 0.5:0.5 --ring-color bb00cc --key-hl-color 880033 --grace 2 --fade-in 0.2'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
    # use neo layout
    input type:keyboard {
        xkb_layout de
        xkb_variant neo
        # menu is mapped to win
        xkb_options altwin:menu_win
    }

    # touchpad configuration
    input type:touchpad {
        dwt enabled
        tap enabled
        natural_scroll disabled
        middle_emulation enabled
    }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

    # Configure border style <normal|1pixel|pixel xx|none|pixel>
    default_border pixel 1
    default_floating_border pixel 1
    floating_minimum_size 75 x 50
    floating_maximum_size 1870 x 1000

    titlebar_border_thickness 1
    # titlebar_padding <h> [v]

    # Hide borders
    hide_edge_borders none

    # change borders
    bindsym $mod+udiaeresis border none
    bindsym $mod+odiaeresis border pixel 1
    bindsym $mod+adiaeresis border normal

### Key bindings
#
# Bound keys denoted by captial letters
# Unbound keys denoted by small letters
#
# XVLCWkHGFQß
# UIAEOSNRTDy
#  ÜÖÄPZBM,.j
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+n exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+m exec $menu
    # bindsym $mod+d exec $dmenu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+r reload

    # display gamma settings using wl-gammactl
    bindsym $mod+c exec wl-gammactl

    # lock screen
    bindsym $mod+Shift+k exec swaylock --screenshots --clock --indicator --indicator-radius 100 --indicator-thickness 7 --effect-blur 7x5 --effect-vignette 0.5:0.5 --ring-color bb00cc --key-hl-color 880033 --grace 2 --fade-in 0.2

    # exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # nag
    set {
      $nag         exec swaynagmode
      $nag_exit    $nag --exit
      $nag_confirm $nag --confirm
      $nag_select  $nag --select
    }
    mode "nag" {
      bindsym {
        Ctrl+d    mode "default"

        Ctrl+c    $nag_exit
        q         $nag_exit
        Escape    $nag_exit

        Return    $nag_confirm

        Tab       $nag_select prev
        Shift+Tab $nag_select next

        Left      $nag_select next
        Right     $nag_select prev

        Up        $nag_select next
        Down      $nag_select prev
      }
    }
    bindsym {
      $mod+Shift+x $nag -t "warning" -m "Exit Sway?" -b "Exit" "swaymsg exit" -b "Reload" "swaymsg reload"
    }
    # -R is recommended for swaynag_command so that, upon a syntax error in your sway config, the
    # 'Reload Sway' option will be initially selected instead of the 'Exit Sway' option
    swaynag_command $nag -R
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # workspace back and forth (with/without active container)
    workspace_auto_back_and_forth yes
    bindsym $mod+b workspace back_and_forth
    bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # move focused container to workspace
    bindsym $mod+Ctrl+1 move container to workspace number 1
    bindsym $mod+Ctrl+2 move container to workspace number 2
    bindsym $mod+Ctrl+3 move container to workspace number 3
    bindsym $mod+Ctrl+4 move container to workspace number 4
    bindsym $mod+Ctrl+5 move container to workspace number 5
    bindsym $mod+Ctrl+6 move container to workspace number 6
    bindsym $mod+Ctrl+7 move container to workspace number 7
    bindsym $mod+Ctrl+8 move container to workspace number 8
    bindsym $mod+Ctrl+9 move container to workspace number 9
    bindsym $mod+Ctrl+0 move container to workspace number 10
    # move to workspace with focused container
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # navigate workspaces next / previous
    bindsym $mod+Ctrl+Right workspace next
    bindsym $mod+Ctrl+Left workspace prev
    bindsym $mod+o workspace next
    bindsym $mod+u workspace prev
    bindsym $mod+Tab workspace next
    bindsym $mod+Shift+Tab workspace prev

    bindsym $mod+Ctrl+Shift+Right move workspace to output right
    bindsym $mod+Ctrl+Shift+Left move workspace to output left
    bindsym $mod+Ctrl+Shift+Down move workspace to output down
    bindsym $mod+Ctrl+Shift+Up move workspace to output up

#
# Special keys:
#
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86MonBrightnessDown exec light -U 5
    bindsym XF86MonBrightnessUp exec light -A 5
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    # use grim and slurp to screenshot directly with Print button
    set $screenshot grim ~/Pictures/Screenshots/$(date +"%Y%m%d_%Hh%Mm%Ss")_grim.png
    set $screenclip slurp | grim -g - ~/Pictures/Screenshots/$(date +"%Y-%m-%d-%H-%M-%S").png
    bindsym $mod+Print exec $screenshot
    bindsym $mod+Shift+Print exec $screenclip

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+h or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+d layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+r layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+p focus parent

    # toggle floating for certain applications
    for_window [class="MEGAsync" instance="megasync"] floating enable

    # toggle floating for Firefox sharing indicator
    for_window [title="Firefox — Sharing Indicator"] floating enable, sticky enable
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+s move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+s scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+z mode "resize"

#
# Autostart applications
#
# set environment variables for screensharing
# according to xdg-desktop-portal-wlr README
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# set gtk-theme, icon-theme and cursor-theme for gtk programs
set $gnome-schema org.gnome.desktop.interface
exec_always {
    gsettings set $gnome-schema gtk-theme 'Adapta-DeepPurple-Nokto-Eta'
    gsettings set $gnome-schema icon-theme 'Papirus-Dark'
    gsettings set $gnome-schema cursor-theme 'xcursor-breeze-snow'
}

# switch between different tiling modes
exec --no-startup-id swaymgr
set $mode_swaymgr Tiling: (s) spiral, (l) left, (m) manual
mode "$mode_swaymgr" {
    bindsym  s exec swaymgr -s 'set spiral'; mode "default"
    bindsym  l exec swaymgr -s 'set left'; mode "default"
    bindsym  m exec swaymgr -s 'set manual'; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+x mode "$mode_swaymgr"

# start tray applets
exec nm-applet --indicator
exec blueman-applet
exec redshift-gtk

# load Xresources
exec xrdb ~/.Xresources

# show message when battery is discharging
exec swaynag-battery

# activate gestures
exec libinput-gestures-setup start

#
# Color settings
#
# Import Base16 colorscheme
include colorscheme
# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG      Text    Indicator Child Border
client.focused          $base0E $base00 $base05 $base0E   $base0E
client.focused_inactive $base01 $base01 $base05 $base03   $base01
client.unfocused        $base01 $base00 $base05 $base01   $base01
client.urgent           $base08 $base08 $base00 $base08   $base08
client.placeholder      $base00 $base00 $base05 $base00   $base00
client.background       $base07

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    swaybar_command waybar
}

# start kanshi for dynamic output configuration
# exec kanshi

#
# Gaps
#
# Set inner/outer gaps
gaps inner 8
gaps outer 0

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps off

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders no_gaps

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

include /etc/sway/config.d/*
